/* ====================================================== 
   5. Basic Layout Styles                                        
/* ====================================================== */

/* 5.1 Basic */
.fl {
  float: left;
}

.fr {
  float: right;
}

.t-r {
  text-align: right;
}

.t-l {
  text-align: left;
}

.t-c {
  text-align: center;
}

.inline-block {
  display: inline-block;
}

.block {
  display: block;
}

.pos-normal-align, .pos-vertical-align {
  position: absolute;
  z-index: 6;
  width: 100%;
}

.pos-normal-align {
  top: 0;
}

.pos-vertical-align {
  /* Vertical Center */
  top: 50%;
  transform: translateY(-50%);
  &.relative {
    position: relative;
  }
}

@media all and (max-width: 768px) {
  .pos-vertical-align.relative {
    top: 0;
    transform: none;
	padding-top: 1.5rem;
  }
}

.center-vertically {
  display: table;
  width: 100%;
  height: 100%;
  > div {
    display: table-cell;
    vertical-align: middle;
  }
}

.overflow-hidden-x {
  overflow-x: hidden;
}

.overflow-hidden {
  overflow: hidden;
}

.height-10 {
  height: 10vh !important;
}

.height-20 {
  height: 20vh !important;
}

.height-30 {
  height: 30vh !important;
}

.height-40 {
  height: 40vh !important;
}

.height-50 {
  height: 50vh !important;
}

.height-60 {
  height: 60vh !important;
}

.height-70 {
  height: 70vh !important;
}

.height-80 {
  height: 80vh !important;
}

.height-90 {
  height: 90vh !important;
}

.height-100 {
  height: 100vh !important;
}

@media all and (max-width: 768px) {
  .height-100, .height-90, .height-80, .height-70, .height-60, .height-50, .height-40, .height-30, .height-20, .height-10 {
    height: auto !important;
  }
}

/* 5.2 Main Wrapper */
/* Note: Do not use the "transform" property, otherwise it may affect the internal elements */
.wrapper {
	min-height: 100%;
	width: 100%;
	overflow: hidden;
}


/* 5.3 Seamless Grid */
$seamless-grid-pad : 15px;

.seamless-grid-container {
	width: 100%;
	
	.seamless-grid,
	[class*='seamless-col-'] {
	  box-sizing: border-box;
	}
	

	.seamless-grid {

		width: calc( 100% + #{$seamless-grid-pad} );

		&:after {
		  /* Or @extend clearfix */
		  content: "";
		  display: table;
		  clear: both;
		}

		.content {
		  word-wrap: break-word;
		  position: relative;
		}

		
		&.no-gutter {
			
			width: 100%;
			
			> [class*='seamless-col-'] {
			
			    padding-right: 0 !important;
	    	}
		  
		}		


	}


	[class*='seamless-col-'] {
		float: left;
		padding-right: $seamless-grid-pad;
		margin-bottom: $seamless-grid-pad/2;

		.seamless-grid &:last-of-type {
			padding-right: 0;
		}
		.seamless-grid &:last-of-type .content {
			width: calc(100% - #{$seamless-grid-pad}); 
		}	



		
	}


	.seamless-col-2-3 {
		width: 66.666666666667%;
	}
	.seamless-col-1-3 {
		width: 33.333333333333%;
	}
	.seamless-col-1-2 {
		width: 50%;
	}
	.seamless-col-1-4 {
		width: 25%;
	}
	.seamless-col-3-4 {
		width: 75%;
	}

	.seamless-col-1-5 {
		width: 20%;
	}
	.seamless-col-2-5 {
		width: 40%;
	}

	.seamless-col-3-5 {
		width: 60%;
	}

	.seamless-col-4-5 {
		width: 80%;
	}

	.seamless-col-1-6 {
		width: 16.66666666666667%;
	}



	.seamless-grid.loop .seamless-col-1-2:nth-child(2n+1),
	.seamless-grid.loop .seamless-col-1-3:nth-child(3n+1),
	.seamless-grid.loop .seamless-col-1-4:nth-child(4n+1),
	.seamless-grid.loop .seamless-col-1-6:nth-child(6n+1) {
		clear: both;
	}


	
}




@media all and (max-width: 991px) {
	
	.seamless-grid-container {
		
	
		/* Loop */
		.seamless-grid.loop .seamless-col-1-3:nth-child(3n+1) {
			clear: none;
		}

		.seamless-grid.loop .seamless-col-1-4,
		.seamless-grid.loop .seamless-col-1-3 {
			width: 50%;
		}

		.seamless-grid.loop .seamless-col-1-4:nth-child(2n+1),
		.seamless-grid.loop .seamless-col-1-3:nth-child(2n+1) {
			clear: both;

		}

		
		/* 2 columns */
		.seamless-grid.use-2 .seamless-col-1-6,
		.seamless-grid.use-2 .seamless-col-1-4,
		.seamless-grid.use-2 .seamless-col-1-3 {
			width: 50%;
			float: left;
		}

		.seamless-grid.use-2 .seamless-col-1-6:nth-child(2n+1),
		.seamless-grid.use-2 .seamless-col-1-4:nth-child(2n+1),
		.seamless-grid.use-2 .seamless-col-1-3:nth-child(2n+1) {
			padding-right: $seamless-grid-pad;
			clear: both;

		}


	}
	


	
}


@media all and (max-width: 768px) {
	
	
	.seamless-grid-container {
		
		.seamless-grid {
			&.no-gutter {
				width: calc(100% + #{$seamless-grid-pad});
			}	
		}
		
		[class*='seamless-col-'] {
			float: none;
			width: calc(100% - #{$seamless-grid-pad});
			padding-left: 0;
			padding-right: 0;
		}

		
		/* Loop */
		.seamless-grid.loop .seamless-col-1-2:last-of-type,
		.seamless-grid.loop .seamless-col-1-3:last-of-type,
		.seamless-grid.loop .seamless-col-1-4:last-of-type,
		.seamless-grid.loop .seamless-col-1-6:last-of-type {
			padding-right: $seamless-grid-pad;
			width: 100%;
		}

		.seamless-grid.loop.no-gutter .seamless-col-1-2:last-of-type,
		.seamless-grid.loop.no-gutter .seamless-col-1-3:last-of-type,
		.seamless-grid.loop.no-gutter .seamless-col-1-4:last-of-type,
		.seamless-grid.loop.no-gutter .seamless-col-1-6:last-of-type {
			width: calc(100% - #{$seamless-grid-pad});
		}
		
		.seamless-grid.loop .seamless-col-1-2:last-of-type .content,
		.seamless-grid.loop .seamless-col-1-3:last-of-type .content,
		.seamless-grid.loop .seamless-col-1-4:last-of-type .content,
		.seamless-grid.loop .seamless-col-1-6:last-of-type .content {
			width: 100%;
		}

		
		.seamless-grid.loop .seamless-col-1-2,
		.seamless-grid.loop .seamless-col-1-3,
		.seamless-grid.loop .seamless-col-1-4,
		.seamless-grid.loop .seamless-col-1-6 {
			width: calc(100% - #{$seamless-grid-pad});
		}

		
		/* Loop & 2 columns */
		.seamless-grid.loop.use-2 .seamless-col-1-2:last-of-type,
		.seamless-grid.loop.use-2 .seamless-col-1-3:last-of-type,
		.seamless-grid.loop.use-2 .seamless-col-1-4:last-of-type,
		.seamless-grid.loop.use-2 .seamless-col-1-6:last-of-type {
			width: 50%;
		}
		
		.seamless-grid.loop.use-2.no-gutter .seamless-col-1-2:last-of-type,
		.seamless-grid.loop.use-2.no-gutter .seamless-col-1-3:last-of-type,
		.seamless-grid.loop.use-2.no-gutter .seamless-col-1-4:last-of-type,
		.seamless-grid.loop.use-2.no-gutter .seamless-col-1-6:last-of-type {
			width: calc(50% - #{$seamless-grid-pad/2});
		}
		
		/* 2 columns */
		.seamless-grid.use-2 .seamless-col-1-6,
		.seamless-grid.use-2 .seamless-col-1-4,
		.seamless-grid.use-2 .seamless-col-1-3 {
			width: 50%;
			float: left;
			margin-bottom: 0;
		}
		
		.seamless-grid.use-2.no-gutter .seamless-col-1-6,
		.seamless-grid.use-2.no-gutter .seamless-col-1-4,
		.seamless-grid.use-2.no-gutter .seamless-col-1-3 {
			width: calc(50% - #{$seamless-grid-pad/2});
		}
	
		
		.seamless-grid.use-2 .seamless-col-1-6:nth-child(2n+1),
		.seamless-grid.use-2 .seamless-col-1-4:nth-child(2n+1),
		.seamless-grid.use-2 .seamless-col-1-3:nth-child(2n+1) {
			clear: both;

		}


		.seamless-grid.use-2 .seamless-col-1-6:nth-child(2n+0),
		.seamless-grid.use-2 .seamless-col-1-4:nth-child(2n+0),
		.seamless-grid.use-2 .seamless-col-1-3:nth-child(2n+0) {
			padding-right: $seamless-grid-pad;

		}
		
		


	}


	
}
